
./printf：     文件格式 elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 20                	add    %ah,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 10                	add    %dl,(%eax)
 8048199:	d0 5c 1e a8          	rcrb   -0x58(%esi,%ebx,1)
 804819d:	e0 21                	loopne 80481c0 <_init-0x130>
 804819f:	44                   	inc    %esp
 80481a0:	00 70 b3             	add    %dh,-0x4d(%eax)
 80481a3:	10 d8                	adc    %bl,%al
 80481a5:	36 08 d1             	ss or  %dl,%cl
 80481a8:	f1                   	icebp  
 80481a9:	af                   	scas   %es:(%edi),%eax
 80481aa:	40                   	inc    %eax
 80481ab:	7f                   	.byte 0x7f

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	05 00 00 00 01       	add    $0x1000000,%eax
 80481b5:	00 00                	add    %al,(%eax)
 80481b7:	00 05 00 00 00 00    	add    %al,0x0
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 05 00 00 00 ad    	add    %al,0xad000000
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x164>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	2b 00                	sub    (%eax),%eax
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	12 00                	adc    (%eax),%al
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	1a 00                	sbb    (%eax),%al
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	12 00                	adc    (%eax),%al
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	44                   	inc    %esp
	...
 8048205:	00 00                	add    %al,(%eax)
 8048207:	00 20                	add    %ah,(%eax)
 8048209:	00 00                	add    %al,(%eax)
 804820b:	00 32                	add    %dh,(%edx)
	...
 8048215:	00 00                	add    %al,(%eax)
 8048217:	00 12                	add    %dl,(%edx)
 8048219:	00 00                	add    %al,(%eax)
 804821b:	00 0b                	add    %cl,(%ebx)
 804821d:	00 00                	add    %al,(%eax)
 804821f:	00 8c 85 04 08 04 00 	add    %cl,0x40804(%ebp,%eax,4)
 8048226:	00 00                	add    %al,(%eax)
 8048228:	11 00                	adc    %eax,(%eax)
 804822a:	10 00                	adc    %al,(%eax)

Disassembly of section .dynstr:

0804822c <.dynstr>:
 804822c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048230:	63 2e                	arpl   %bp,(%esi)
 8048232:	73 6f                	jae    80482a3 <_init-0x4d>
 8048234:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 8048239:	4f                   	dec    %edi
 804823a:	5f                   	pop    %edi
 804823b:	73 74                	jae    80482b1 <_init-0x3f>
 804823d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048244:	64 
 8048245:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048248:	73 74                	jae    80482be <_init-0x32>
 804824a:	61                   	popa   
 804824b:	63 6b 5f             	arpl   %bp,0x5f(%ebx)
 804824e:	63 68 6b             	arpl   %bp,0x6b(%eax)
 8048251:	5f                   	pop    %edi
 8048252:	66 61                	popaw  
 8048254:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%eax,%eax,1),%ebp
 804825b:	74 
 804825c:	66 00 5f 5f          	data16 add %bl,0x5f(%edi)
 8048260:	6c                   	insb   (%dx),%es:(%edi)
 8048261:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048268:	72 74                	jb     80482de <_init-0x12>
 804826a:	5f                   	pop    %edi
 804826b:	6d                   	insl   (%dx),%es:(%edi)
 804826c:	61                   	popa   
 804826d:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 8048274:	6f                   	outsl  %ds:(%esi),(%dx)
 8048275:	6e                   	outsb  %ds:(%esi),(%dx)
 8048276:	5f                   	pop    %edi
 8048277:	73 74                	jae    80482ed <_init-0x3>
 8048279:	61                   	popa   
 804827a:	72 74                	jb     80482f0 <_init>
 804827c:	5f                   	pop    %edi
 804827d:	5f                   	pop    %edi
 804827e:	00 47 4c             	add    %al,0x4c(%edi)
 8048281:	49                   	dec    %ecx
 8048282:	42                   	inc    %edx
 8048283:	43                   	inc    %ebx
 8048284:	5f                   	pop    %edi
 8048285:	32 2e                	xor    (%esi),%ch
 8048287:	34 00                	xor    $0x0,%al
 8048289:	47                   	inc    %edi
 804828a:	4c                   	dec    %esp
 804828b:	49                   	dec    %ecx
 804828c:	42                   	inc    %edx
 804828d:	43                   	inc    %ebx
 804828e:	5f                   	pop    %edi
 804828f:	32 2e                	xor    (%esi),%ch
 8048291:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048294 <.gnu.version>:
 8048294:	00 00                	add    %al,(%eax)
 8048296:	02 00                	add    (%eax),%al
 8048298:	03 00                	add    (%eax),%eax
 804829a:	00 00                	add    %al,(%eax)
 804829c:	02 00                	add    (%eax),%al
 804829e:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

080482a0 <.gnu.version_r>:
 80482a0:	01 00                	add    %eax,(%eax)
 80482a2:	02 00                	add    (%eax),%al
 80482a4:	01 00                	add    %eax,(%eax)
 80482a6:	00 00                	add    %al,(%eax)
 80482a8:	10 00                	adc    %al,(%eax)
 80482aa:	00 00                	add    %al,(%eax)
 80482ac:	00 00                	add    %al,(%eax)
 80482ae:	00 00                	add    %al,(%eax)
 80482b0:	14 69                	adc    $0x69,%al
 80482b2:	69 0d 00 00 03 00 53 	imul   $0x53,0x30000,%ecx
 80482b9:	00 00 00 
 80482bc:	10 00                	adc    %al,(%eax)
 80482be:	00 00                	add    %al,(%eax)
 80482c0:	10 69 69             	adc    %ch,0x69(%ecx)
 80482c3:	0d 00 00 02 00       	or     $0x20000,%eax
 80482c8:	5d                   	pop    %ebp
 80482c9:	00 00                	add    %al,(%eax)
 80482cb:	00 00                	add    %al,(%eax)
 80482cd:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

080482d0 <.rel.dyn>:
 80482d0:	fc                   	cld    
 80482d1:	9f                   	lahf   
 80482d2:	04 08                	add    $0x8,%al
 80482d4:	06                   	push   %es
 80482d5:	03 00                	add    (%eax),%eax
	...

Disassembly of section .rel.plt:

080482d8 <.rel.plt>:
 80482d8:	0c a0                	or     $0xa0,%al
 80482da:	04 08                	add    $0x8,%al
 80482dc:	07                   	pop    %es
 80482dd:	01 00                	add    %eax,(%eax)
 80482df:	00 10                	add    %dl,(%eax)
 80482e1:	a0 04 08 07 02       	mov    0x2070804,%al
 80482e6:	00 00                	add    %al,(%eax)
 80482e8:	14 a0                	adc    $0xa0,%al
 80482ea:	04 08                	add    $0x8,%al
 80482ec:	07                   	pop    %es
 80482ed:	04 00                	add    $0x0,%al
	...

Disassembly of section .init:

080482f0 <_init>:
 80482f0:	53                   	push   %ebx
 80482f1:	83 ec 08             	sub    $0x8,%esp
 80482f4:	e8 a7 00 00 00       	call   80483a0 <__x86.get_pc_thunk.bx>
 80482f9:	81 c3 07 1d 00 00    	add    $0x1d07,%ebx
 80482ff:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048305:	85 c0                	test   %eax,%eax
 8048307:	74 05                	je     804830e <_init+0x1e>
 8048309:	e8 52 00 00 00       	call   8048360 <__libc_start_main@plt+0x10>
 804830e:	83 c4 08             	add    $0x8,%esp
 8048311:	5b                   	pop    %ebx
 8048312:	c3                   	ret    

Disassembly of section .plt:

08048320 <printf@plt-0x10>:
 8048320:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048326:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804832c:	00 00                	add    %al,(%eax)
	...

08048330 <printf@plt>:
 8048330:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048336:	68 00 00 00 00       	push   $0x0
 804833b:	e9 e0 ff ff ff       	jmp    8048320 <_init+0x30>

08048340 <__stack_chk_fail@plt>:
 8048340:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048346:	68 08 00 00 00       	push   $0x8
 804834b:	e9 d0 ff ff ff       	jmp    8048320 <_init+0x30>

08048350 <__libc_start_main@plt>:
 8048350:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048356:	68 10 00 00 00       	push   $0x10
 804835b:	e9 c0 ff ff ff       	jmp    8048320 <_init+0x30>

Disassembly of section .plt.got:

08048360 <.plt.got>:
 8048360:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 8048366:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048370 <_start>:
 8048370:	31 ed                	xor    %ebp,%ebp
 8048372:	5e                   	pop    %esi
 8048373:	89 e1                	mov    %esp,%ecx
 8048375:	83 e4 f0             	and    $0xfffffff0,%esp
 8048378:	50                   	push   %eax
 8048379:	54                   	push   %esp
 804837a:	52                   	push   %edx
 804837b:	68 70 85 04 08       	push   $0x8048570
 8048380:	68 10 85 04 08       	push   $0x8048510
 8048385:	51                   	push   %ecx
 8048386:	56                   	push   %esi
 8048387:	68 6b 84 04 08       	push   $0x804846b
 804838c:	e8 bf ff ff ff       	call   8048350 <__libc_start_main@plt>
 8048391:	f4                   	hlt    
 8048392:	66 90                	xchg   %ax,%ax
 8048394:	66 90                	xchg   %ax,%ax
 8048396:	66 90                	xchg   %ax,%ax
 8048398:	66 90                	xchg   %ax,%ax
 804839a:	66 90                	xchg   %ax,%ax
 804839c:	66 90                	xchg   %ax,%ax
 804839e:	66 90                	xchg   %ax,%ax

080483a0 <__x86.get_pc_thunk.bx>:
 80483a0:	8b 1c 24             	mov    (%esp),%ebx
 80483a3:	c3                   	ret    
 80483a4:	66 90                	xchg   %ax,%ax
 80483a6:	66 90                	xchg   %ax,%ax
 80483a8:	66 90                	xchg   %ax,%ax
 80483aa:	66 90                	xchg   %ax,%ax
 80483ac:	66 90                	xchg   %ax,%ax
 80483ae:	66 90                	xchg   %ax,%ax

080483b0 <deregister_tm_clones>:
 80483b0:	b8 23 a0 04 08       	mov    $0x804a023,%eax
 80483b5:	2d 20 a0 04 08       	sub    $0x804a020,%eax
 80483ba:	83 f8 06             	cmp    $0x6,%eax
 80483bd:	76 1a                	jbe    80483d9 <deregister_tm_clones+0x29>
 80483bf:	b8 00 00 00 00       	mov    $0x0,%eax
 80483c4:	85 c0                	test   %eax,%eax
 80483c6:	74 11                	je     80483d9 <deregister_tm_clones+0x29>
 80483c8:	55                   	push   %ebp
 80483c9:	89 e5                	mov    %esp,%ebp
 80483cb:	83 ec 14             	sub    $0x14,%esp
 80483ce:	68 20 a0 04 08       	push   $0x804a020
 80483d3:	ff d0                	call   *%eax
 80483d5:	83 c4 10             	add    $0x10,%esp
 80483d8:	c9                   	leave  
 80483d9:	f3 c3                	repz ret 
 80483db:	90                   	nop
 80483dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080483e0 <register_tm_clones>:
 80483e0:	b8 20 a0 04 08       	mov    $0x804a020,%eax
 80483e5:	2d 20 a0 04 08       	sub    $0x804a020,%eax
 80483ea:	c1 f8 02             	sar    $0x2,%eax
 80483ed:	89 c2                	mov    %eax,%edx
 80483ef:	c1 ea 1f             	shr    $0x1f,%edx
 80483f2:	01 d0                	add    %edx,%eax
 80483f4:	d1 f8                	sar    %eax
 80483f6:	74 1b                	je     8048413 <register_tm_clones+0x33>
 80483f8:	ba 00 00 00 00       	mov    $0x0,%edx
 80483fd:	85 d2                	test   %edx,%edx
 80483ff:	74 12                	je     8048413 <register_tm_clones+0x33>
 8048401:	55                   	push   %ebp
 8048402:	89 e5                	mov    %esp,%ebp
 8048404:	83 ec 10             	sub    $0x10,%esp
 8048407:	50                   	push   %eax
 8048408:	68 20 a0 04 08       	push   $0x804a020
 804840d:	ff d2                	call   *%edx
 804840f:	83 c4 10             	add    $0x10,%esp
 8048412:	c9                   	leave  
 8048413:	f3 c3                	repz ret 
 8048415:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048419:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048420 <__do_global_dtors_aux>:
 8048420:	80 3d 20 a0 04 08 00 	cmpb   $0x0,0x804a020
 8048427:	75 13                	jne    804843c <__do_global_dtors_aux+0x1c>
 8048429:	55                   	push   %ebp
 804842a:	89 e5                	mov    %esp,%ebp
 804842c:	83 ec 08             	sub    $0x8,%esp
 804842f:	e8 7c ff ff ff       	call   80483b0 <deregister_tm_clones>
 8048434:	c6 05 20 a0 04 08 01 	movb   $0x1,0x804a020
 804843b:	c9                   	leave  
 804843c:	f3 c3                	repz ret 
 804843e:	66 90                	xchg   %ax,%ax

08048440 <frame_dummy>:
 8048440:	b8 10 9f 04 08       	mov    $0x8049f10,%eax
 8048445:	8b 10                	mov    (%eax),%edx
 8048447:	85 d2                	test   %edx,%edx
 8048449:	75 05                	jne    8048450 <frame_dummy+0x10>
 804844b:	eb 93                	jmp    80483e0 <register_tm_clones>
 804844d:	8d 76 00             	lea    0x0(%esi),%esi
 8048450:	ba 00 00 00 00       	mov    $0x0,%edx
 8048455:	85 d2                	test   %edx,%edx
 8048457:	74 f2                	je     804844b <frame_dummy+0xb>
 8048459:	55                   	push   %ebp
 804845a:	89 e5                	mov    %esp,%ebp
 804845c:	83 ec 14             	sub    $0x14,%esp
 804845f:	50                   	push   %eax
 8048460:	ff d2                	call   *%edx
 8048462:	83 c4 10             	add    $0x10,%esp
 8048465:	c9                   	leave  
 8048466:	e9 75 ff ff ff       	jmp    80483e0 <register_tm_clones>

0804846b <main>:
 804846b:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 804846f:	83 e4 f0             	and    $0xfffffff0,%esp
 8048472:	ff 71 fc             	pushl  -0x4(%ecx)
 8048475:	55                   	push   %ebp
 8048476:	89 e5                	mov    %esp,%ebp
 8048478:	51                   	push   %ecx
 8048479:	83 ec 44             	sub    $0x44,%esp
 804847c:	89 c8                	mov    %ecx,%eax
 804847e:	8b 40 04             	mov    0x4(%eax),%eax
 8048481:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 8048484:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804848a:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804848d:	31 c0                	xor    %eax,%eax
 804848f:	c7 45 cc 25 73 0a 00 	movl   $0xa7325,-0x34(%ebp)
 8048496:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 804849d:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
 80484a4:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
 80484ab:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
 80484b2:	c7 45 e0 68 65 6c 6c 	movl   $0x6c6c6568,-0x20(%ebp)
 80484b9:	c7 45 e4 6f 77 6f 72 	movl   $0x726f776f,-0x1c(%ebp)
 80484c0:	c7 45 e8 6c 64 21 00 	movl   $0x21646c,-0x18(%ebp)
 80484c7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 80484ce:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 80484d5:	83 ec 08             	sub    $0x8,%esp
 80484d8:	8d 45 e0             	lea    -0x20(%ebp),%eax
 80484db:	50                   	push   %eax
 80484dc:	8d 45 cc             	lea    -0x34(%ebp),%eax
 80484df:	50                   	push   %eax
 80484e0:	e8 4b fe ff ff       	call   8048330 <printf@plt>
 80484e5:	83 c4 10             	add    $0x10,%esp
 80484e8:	b8 00 00 00 00       	mov    $0x0,%eax
 80484ed:	8b 55 f4             	mov    -0xc(%ebp),%edx
 80484f0:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80484f7:	74 05                	je     80484fe <main+0x93>
 80484f9:	e8 42 fe ff ff       	call   8048340 <__stack_chk_fail@plt>
 80484fe:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 8048501:	c9                   	leave  
 8048502:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048505:	c3                   	ret    
 8048506:	66 90                	xchg   %ax,%ax
 8048508:	66 90                	xchg   %ax,%ax
 804850a:	66 90                	xchg   %ax,%ax
 804850c:	66 90                	xchg   %ax,%ax
 804850e:	66 90                	xchg   %ax,%ax

08048510 <__libc_csu_init>:
 8048510:	55                   	push   %ebp
 8048511:	57                   	push   %edi
 8048512:	56                   	push   %esi
 8048513:	53                   	push   %ebx
 8048514:	e8 87 fe ff ff       	call   80483a0 <__x86.get_pc_thunk.bx>
 8048519:	81 c3 e7 1a 00 00    	add    $0x1ae7,%ebx
 804851f:	83 ec 0c             	sub    $0xc,%esp
 8048522:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8048526:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804852c:	e8 bf fd ff ff       	call   80482f0 <_init>
 8048531:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048537:	29 c6                	sub    %eax,%esi
 8048539:	c1 fe 02             	sar    $0x2,%esi
 804853c:	85 f6                	test   %esi,%esi
 804853e:	74 25                	je     8048565 <__libc_csu_init+0x55>
 8048540:	31 ff                	xor    %edi,%edi
 8048542:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048548:	83 ec 04             	sub    $0x4,%esp
 804854b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804854f:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048553:	55                   	push   %ebp
 8048554:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804855b:	83 c7 01             	add    $0x1,%edi
 804855e:	83 c4 10             	add    $0x10,%esp
 8048561:	39 f7                	cmp    %esi,%edi
 8048563:	75 e3                	jne    8048548 <__libc_csu_init+0x38>
 8048565:	83 c4 0c             	add    $0xc,%esp
 8048568:	5b                   	pop    %ebx
 8048569:	5e                   	pop    %esi
 804856a:	5f                   	pop    %edi
 804856b:	5d                   	pop    %ebp
 804856c:	c3                   	ret    
 804856d:	8d 76 00             	lea    0x0(%esi),%esi

08048570 <__libc_csu_fini>:
 8048570:	f3 c3                	repz ret 

Disassembly of section .fini:

08048574 <_fini>:
 8048574:	53                   	push   %ebx
 8048575:	83 ec 08             	sub    $0x8,%esp
 8048578:	e8 23 fe ff ff       	call   80483a0 <__x86.get_pc_thunk.bx>
 804857d:	81 c3 83 1a 00 00    	add    $0x1a83,%ebx
 8048583:	83 c4 08             	add    $0x8,%esp
 8048586:	5b                   	pop    %ebx
 8048587:	c3                   	ret    

Disassembly of section .rodata:

08048588 <_fp_hw>:
 8048588:	03 00                	add    (%eax),%eax
	...

0804858c <_IO_stdin_used>:
 804858c:	01 00                	add    %eax,(%eax)
 804858e:	02 00                	add    (%eax),%al

Disassembly of section .eh_frame_hdr:

08048590 <__GNU_EH_FRAME_HDR>:
 8048590:	01 1b                	add    %ebx,(%ebx)
 8048592:	03 3b                	add    (%ebx),%edi
 8048594:	28 00                	sub    %al,(%eax)
 8048596:	00 00                	add    %al,(%eax)
 8048598:	04 00                	add    $0x0,%al
 804859a:	00 00                	add    %al,(%eax)
 804859c:	90                   	nop
 804859d:	fd                   	std    
 804859e:	ff                   	(bad)  
 804859f:	ff 44 00 00          	incl   0x0(%eax,%eax,1)
 80485a3:	00 db                	add    %bl,%bl
 80485a5:	fe                   	(bad)  
 80485a6:	ff                   	(bad)  
 80485a7:	ff 68 00             	ljmp   *0x0(%eax)
 80485aa:	00 00                	add    %al,(%eax)
 80485ac:	80 ff ff             	cmp    $0xff,%bh
 80485af:	ff 94 00 00 00 e0 ff 	call   *-0x200000(%eax,%eax,1)
 80485b6:	ff                   	(bad)  
 80485b7:	ff e0                	jmp    *%eax
 80485b9:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

080485bc <__FRAME_END__-0xc8>:
 80485bc:	14 00                	adc    $0x0,%al
 80485be:	00 00                	add    %al,(%eax)
 80485c0:	00 00                	add    %al,(%eax)
 80485c2:	00 00                	add    %al,(%eax)
 80485c4:	01 7a 52             	add    %edi,0x52(%edx)
 80485c7:	00 01                	add    %al,(%ecx)
 80485c9:	7c 08                	jl     80485d3 <__GNU_EH_FRAME_HDR+0x43>
 80485cb:	01 1b                	add    %ebx,(%ebx)
 80485cd:	0c 04                	or     $0x4,%al
 80485cf:	04 88                	add    $0x88,%al
 80485d1:	01 00                	add    %eax,(%eax)
 80485d3:	00 20                	add    %ah,(%eax)
 80485d5:	00 00                	add    %al,(%eax)
 80485d7:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80485da:	00 00                	add    %al,(%eax)
 80485dc:	44                   	inc    %esp
 80485dd:	fd                   	std    
 80485de:	ff                   	(bad)  
 80485df:	ff 40 00             	incl   0x0(%eax)
 80485e2:	00 00                	add    %al,(%eax)
 80485e4:	00 0e                	add    %cl,(%esi)
 80485e6:	08 46 0e             	or     %al,0xe(%esi)
 80485e9:	0c 4a                	or     $0x4a,%al
 80485eb:	0f 0b                	ud2    
 80485ed:	74 04                	je     80485f3 <__GNU_EH_FRAME_HDR+0x63>
 80485ef:	78 00                	js     80485f1 <__GNU_EH_FRAME_HDR+0x61>
 80485f1:	3f                   	aas    
 80485f2:	1a 3b                	sbb    (%ebx),%bh
 80485f4:	2a 32                	sub    (%edx),%dh
 80485f6:	24 22                	and    $0x22,%al
 80485f8:	28 00                	sub    %al,(%eax)
 80485fa:	00 00                	add    %al,(%eax)
 80485fc:	40                   	inc    %eax
 80485fd:	00 00                	add    %al,(%eax)
 80485ff:	00 6b fe             	add    %ch,-0x2(%ebx)
 8048602:	ff                   	(bad)  
 8048603:	ff 9b 00 00 00 00    	lcall  *0x0(%ebx)
 8048609:	44                   	inc    %esp
 804860a:	0c 01                	or     $0x1,%al
 804860c:	00 47 10             	add    %al,0x10(%edi)
 804860f:	05 02 75 00 43       	add    $0x43007502,%eax
 8048614:	0f 03 75 7c          	lsl    0x7c(%ebp),%esi
 8048618:	06                   	push   %es
 8048619:	02 88 0c 01 00 41    	add    0x4100010c(%eax),%cl
 804861f:	c5 43 0c             	lds    0xc(%ebx),%eax
 8048622:	04 04                	add    $0x4,%al
 8048624:	48                   	dec    %eax
 8048625:	00 00                	add    %al,(%eax)
 8048627:	00 6c 00 00          	add    %ch,0x0(%eax,%eax,1)
 804862b:	00 e4                	add    %ah,%ah
 804862d:	fe                   	(bad)  
 804862e:	ff                   	(bad)  
 804862f:	ff 5d 00             	lcall  *0x0(%ebp)
 8048632:	00 00                	add    %al,(%eax)
 8048634:	00 41 0e             	add    %al,0xe(%ecx)
 8048637:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 804863d:	87 03                	xchg   %eax,(%ebx)
 804863f:	41                   	inc    %ecx
 8048640:	0e                   	push   %cs
 8048641:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 8048647:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 804864e:	24 44                	and    $0x44,%al
 8048650:	0e                   	push   %cs
 8048651:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 8048655:	41                   	inc    %ecx
 8048656:	0e                   	push   %cs
 8048657:	30 4d 0e             	xor    %cl,0xe(%ebp)
 804865a:	20 47 0e             	and    %al,0xe(%edi)
 804865d:	14 41                	adc    $0x41,%al
 804865f:	c3                   	ret    
 8048660:	0e                   	push   %cs
 8048661:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048664:	0e                   	push   %cs
 8048665:	0c 41                	or     $0x41,%al
 8048667:	c7                   	(bad)  
 8048668:	0e                   	push   %cs
 8048669:	08 41 c5             	or     %al,-0x3b(%ecx)
 804866c:	0e                   	push   %cs
 804866d:	04 00                	add    $0x0,%al
 804866f:	00 10                	add    %dl,(%eax)
 8048671:	00 00                	add    %al,(%eax)
 8048673:	00 b8 00 00 00 f8    	add    %bh,-0x8000000(%eax)
 8048679:	fe                   	(bad)  
 804867a:	ff                   	(bad)  
 804867b:	ff 02                	incl   (%edx)
 804867d:	00 00                	add    %al,(%eax)
 804867f:	00 00                	add    %al,(%eax)
 8048681:	00 00                	add    %al,(%eax)
	...

08048684 <__FRAME_END__>:
 8048684:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	40                   	inc    %eax
 8049f09:	84 04 08             	test   %al,(%eax,%ecx,1)

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	20                   	.byte 0x20
 8049f0d:	84 04 08             	test   %al,(%eax,%ecx,1)

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	f0 82                	lock (bad) 
 8049f22:	04 08                	add    $0x8,%al
 8049f24:	0d 00 00 00 74       	or     $0x74000000,%eax
 8049f29:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8049f2c:	19 00                	sbb    %eax,(%eax)
 8049f2e:	00 00                	add    %al,(%eax)
 8049f30:	08 9f 04 08 1b 00    	or     %bl,0x1b0804(%edi)
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	2c 82                	sub    $0x82,%al
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 cc                	add    %cl,%ah
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	67 00 00             	add    %al,(%bx,%si)
 8049f6b:	00 0b                	add    %cl,(%ebx)
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 10                	add    %dl,(%eax)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 15 00 00 00 00    	add    %dl,0x0
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	18 00                	sbb    %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 d8                	add    %bl,%al
 8049f99:	82                   	(bad)  
 8049f9a:	04 08                	add    $0x8,%al
 8049f9c:	11 00                	adc    %eax,(%eax)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	d0 82 04 08 12 00    	rolb   0x120804(%edx)
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	08 00                	or     %al,(%eax)
 8049faa:	00 00                	add    %al,(%eax)
 8049fac:	13 00                	adc    (%eax),%eax
 8049fae:	00 00                	add    %al,(%eax)
 8049fb0:	08 00                	or     %al,(%eax)
 8049fb2:	00 00                	add    %al,(%eax)
 8049fb4:	fe                   	(bad)  
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f a0             	ljmp   *-0x60(%edi)
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    $0x8,%al
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 94             	ljmp   *-0x6c(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	36 83 04 08 46       	addl   $0x46,%ss:(%eax,%ecx,1)
 804a011:	83 04 08 56          	addl   $0x56,(%eax,%ecx,1)
 804a015:	83                   	.byte 0x83
 804a016:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a018 <__data_start>:
 804a018:	00 00                	add    %al,(%eax)
	...

0804a01c <__dso_handle>:
 804a01c:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a020 <__bss_start>:
 804a020:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048278>
   a:	74 75                	je     81 <_init-0x804826f>
   c:	20 35 2e 33 2e 31    	and    %dh,0x312e332e
  12:	2d 31 34 75 62       	sub    $0x62753431,%eax
  17:	75 6e                	jne    87 <_init-0x8048269>
  19:	74 75                	je     90 <_init-0x8048260>
  1b:	32 29                	xor    (%ecx),%ch
  1d:	20 35 2e 33 2e 31    	and    %dh,0x312e332e
  23:	20 32                	and    %dh,(%edx)
  25:	30 31                	xor    %dh,(%ecx)
  27:	36 30 34 31          	xor    %dh,%ss:(%ecx,%esi,1)
  2b:	33 00                	xor    (%eax),%eax
