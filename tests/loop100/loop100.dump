
./loop100：     文件格式 elf32-i386
./loop100
体系结构：i386， 标志 0x00000112：
EXEC_P, HAS_SYMS, D_PAGED
起始地址 0x080482e0

程序头：
    PHDR off    0x00000034 vaddr 0x08048034 paddr 0x08048034 align 2**2
         filesz 0x00000120 memsz 0x00000120 flags r-x
  INTERP off    0x00000154 vaddr 0x08048154 paddr 0x08048154 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x08048000 paddr 0x08048000 align 2**12
         filesz 0x0000058c memsz 0x0000058c flags r-x
    LOAD off    0x00000f08 vaddr 0x08049f08 paddr 0x08049f08 align 2**12
         filesz 0x00000110 memsz 0x00000114 flags rw-
 DYNAMIC off    0x00000f14 vaddr 0x08049f14 paddr 0x08049f14 align 2**2
         filesz 0x000000e8 memsz 0x000000e8 flags rw-
    NOTE off    0x00000168 vaddr 0x08048168 paddr 0x08048168 align 2**2
         filesz 0x00000044 memsz 0x00000044 flags r--
EH_FRAME off    0x000004a0 vaddr 0x080484a0 paddr 0x080484a0 align 2**2
         filesz 0x0000002c memsz 0x0000002c flags r--
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-
   RELRO off    0x00000f08 vaddr 0x08049f08 paddr 0x08049f08 align 2**0
         filesz 0x000000f8 memsz 0x000000f8 flags r--

动态节：
  NEEDED               libc.so.6
  INIT                 0x0804828c
  FINI                 0x08048484
  INIT_ARRAY           0x08049f08
  INIT_ARRAYSZ         0x00000004
  FINI_ARRAY           0x08049f0c
  FINI_ARRAYSZ         0x00000004
  GNU_HASH             0x080481ac
  STRTAB               0x0804820c
  SYMTAB               0x080481cc
  STRSZ                0x00000045
  SYMENT               0x00000010
  DEBUG                0x00000000
  PLTGOT               0x0804a000
  PLTRELSZ             0x00000008
  PLTREL               0x00000011
  JMPREL               0x08048284
  REL                  0x0804827c
  RELSZ                0x00000008
  RELENT               0x00000008
  VERNEED              0x0804825c
  VERNEEDNUM           0x00000001
  VERSYM               0x08048252

版本引用：
  required from libc.so.6:
    0x0d696910 0x00 02 GLIBC_2.0

节：
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  08048154  08048154  00000154  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  08048168  08048168  00000168  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  08048188  08048188  00000188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000020  080481ac  080481ac  000001ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000040  080481cc  080481cc  000001cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       00000045  0804820c  0804820c  0000020c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000008  08048252  08048252  00000252  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  0804825c  0804825c  0000025c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.dyn      00000008  0804827c  0804827c  0000027c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rel.plt      00000008  08048284  08048284  00000284  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000023  0804828c  0804828c  0000028c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000020  080482b0  080482b0  000002b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  080482d0  080482d0  000002d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         000001a2  080482e0  080482e0  000002e0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000014  08048484  08048484  00000484  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       00000008  08048498  08048498  00000498  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 0000002c  080484a0  080484a0  000004a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     000000c0  080484cc  080484cc  000004cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000004  08049f08  08049f08  00000f08  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000004  08049f0c  08049f0c  00000f0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .jcr          00000004  08049f10  08049f10  00000f10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .dynamic      000000e8  08049f14  08049f14  00000f14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got          00000004  08049ffc  08049ffc  00000ffc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 23 .got.plt      00000010  0804a000  0804a000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 24 .data         00000008  0804a010  0804a010  00001010  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 25 .bss          00000004  0804a018  0804a018  00001018  2**0
                  ALLOC
 26 .comment      0000002d  00000000  00000000  00001018  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08048154 l    d  .interp	00000000              .interp
08048168 l    d  .note.ABI-tag	00000000              .note.ABI-tag
08048188 l    d  .note.gnu.build-id	00000000              .note.gnu.build-id
080481ac l    d  .gnu.hash	00000000              .gnu.hash
080481cc l    d  .dynsym	00000000              .dynsym
0804820c l    d  .dynstr	00000000              .dynstr
08048252 l    d  .gnu.version	00000000              .gnu.version
0804825c l    d  .gnu.version_r	00000000              .gnu.version_r
0804827c l    d  .rel.dyn	00000000              .rel.dyn
08048284 l    d  .rel.plt	00000000              .rel.plt
0804828c l    d  .init	00000000              .init
080482b0 l    d  .plt	00000000              .plt
080482d0 l    d  .plt.got	00000000              .plt.got
080482e0 l    d  .text	00000000              .text
08048484 l    d  .fini	00000000              .fini
08048498 l    d  .rodata	00000000              .rodata
080484a0 l    d  .eh_frame_hdr	00000000              .eh_frame_hdr
080484cc l    d  .eh_frame	00000000              .eh_frame
08049f08 l    d  .init_array	00000000              .init_array
08049f0c l    d  .fini_array	00000000              .fini_array
08049f10 l    d  .jcr	00000000              .jcr
08049f14 l    d  .dynamic	00000000              .dynamic
08049ffc l    d  .got	00000000              .got
0804a000 l    d  .got.plt	00000000              .got.plt
0804a010 l    d  .data	00000000              .data
0804a018 l    d  .bss	00000000              .bss
00000000 l    d  .comment	00000000              .comment
00000000 l    df *ABS*	00000000              crtstuff.c
08049f10 l     O .jcr	00000000              __JCR_LIST__
08048320 l     F .text	00000000              deregister_tm_clones
08048350 l     F .text	00000000              register_tm_clones
08048390 l     F .text	00000000              __do_global_dtors_aux
0804a018 l     O .bss	00000001              completed.7200
08049f0c l     O .fini_array	00000000              __do_global_dtors_aux_fini_array_entry
080483b0 l     F .text	00000000              frame_dummy
08049f08 l     O .init_array	00000000              __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000              loop100.c
00000000 l    df *ABS*	00000000              crtstuff.c
08048588 l     O .eh_frame	00000000              __FRAME_END__
08049f10 l     O .jcr	00000000              __JCR_END__
00000000 l    df *ABS*	00000000              
08049f0c l       .init_array	00000000              __init_array_end
08049f14 l     O .dynamic	00000000              _DYNAMIC
08049f08 l       .init_array	00000000              __init_array_start
080484a0 l       .eh_frame_hdr	00000000              __GNU_EH_FRAME_HDR
0804a000 l     O .got.plt	00000000              _GLOBAL_OFFSET_TABLE_
08048480 g     F .text	00000002              __libc_csu_fini
00000000  w      *UND*	00000000              _ITM_deregisterTMCloneTable
08048310 g     F .text	00000004              .hidden __x86.get_pc_thunk.bx
0804a010  w      .data	00000000              data_start
0804a018 g       .data	00000000              _edata
08048484 g     F .fini	00000000              _fini
0804a010 g       .data	00000000              __data_start
00000000  w      *UND*	00000000              __gmon_start__
0804a014 g     O .data	00000000              .hidden __dso_handle
0804849c g     O .rodata	00000004              _IO_stdin_used
00000000       F *UND*	00000000              __libc_start_main@@GLIBC_2.0
08048420 g     F .text	0000005d              __libc_csu_init
0804a01c g       .bss	00000000              _end
080482e0 g     F .text	00000000              _start
08048498 g     O .rodata	00000004              _fp_hw
0804a018 g       .bss	00000000              __bss_start
080483db g     F .text	0000003d              main
00000000  w      *UND*	00000000              _Jv_RegisterClasses
0804a018 g     O .data	00000000              .hidden __TMC_END__
00000000  w      *UND*	00000000              _ITM_registerTMCloneTable
0804828c g     F .init	00000000              _init



Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	insb   (%dx),%es:(%edi)
 8048156:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 804815d:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048164:	2e 32 00             	xor    %cs:(%eax),%al

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    $0x0,%al
 804816a:	00 00                	add    %al,(%eax)
 804816c:	10 00                	adc    %al,(%eax)
 804816e:	00 00                	add    %al,(%eax)
 8048170:	01 00                	add    %eax,(%eax)
 8048172:	00 00                	add    %al,(%eax)
 8048174:	47                   	inc    %edi
 8048175:	4e                   	dec    %esi
 8048176:	55                   	push   %ebp
 8048177:	00 00                	add    %al,(%eax)
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 02                	add    %al,(%edx)
 804817d:	00 00                	add    %al,(%eax)
 804817f:	00 06                	add    %al,(%esi)
 8048181:	00 00                	add    %al,(%eax)
 8048183:	00 20                	add    %ah,(%eax)
 8048185:	00 00                	add    %al,(%eax)
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    $0x0,%al
 804818a:	00 00                	add    %al,(%eax)
 804818c:	14 00                	adc    $0x0,%al
 804818e:	00 00                	add    %al,(%eax)
 8048190:	03 00                	add    (%eax),%eax
 8048192:	00 00                	add    %al,(%eax)
 8048194:	47                   	inc    %edi
 8048195:	4e                   	dec    %esi
 8048196:	55                   	push   %ebp
 8048197:	00 0d 81 77 10 09    	add    %cl,0x9107781
 804819d:	53                   	push   %ebx
 804819e:	9c                   	pushf  
 804819f:	2f                   	das    
 80481a0:	b9 a2 48 3c 45       	mov    $0x453c48a2,%ecx
 80481a5:	6e                   	outsb  %ds:(%esi),(%dx)
 80481a6:	d5 e2                	aad    $0xe2
 80481a8:	40                   	inc    %eax
 80481a9:	5b                   	pop    %ebx
 80481aa:	a3                   	.byte 0xa3
 80481ab:	be                   	.byte 0xbe

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    (%eax),%al
 80481ae:	00 00                	add    %al,(%eax)
 80481b0:	03 00                	add    (%eax),%eax
 80481b2:	00 00                	add    %al,(%eax)
 80481b4:	01 00                	add    %eax,(%eax)
 80481b6:	00 00                	add    %al,(%eax)
 80481b8:	05 00 00 00 00       	add    $0x0,%eax
 80481bd:	20 00                	and    %al,(%eax)
 80481bf:	20 00                	and    %al,(%eax)
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 03                	add    %al,(%ebx)
 80481c5:	00 00                	add    %al,(%eax)
 80481c7:	00                   	.byte 0x0
 80481c8:	ad                   	lods   %ds:(%esi),%eax
 80481c9:	4b                   	dec    %ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x100>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	2c 00                	sub    $0x0,%al
	...
 80481e6:	00 00                	add    %al,(%eax)
 80481e8:	20 00                	and    %al,(%eax)
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	1a 00                	sbb    (%eax),%al
	...
 80481f6:	00 00                	add    %al,(%eax)
 80481f8:	12 00                	adc    (%eax),%al
 80481fa:	00 00                	add    %al,(%eax)
 80481fc:	0b 00                	or     (%eax),%eax
 80481fe:	00 00                	add    %al,(%eax)
 8048200:	9c                   	pushf  
 8048201:	84 04 08             	test   %al,(%eax,%ecx,1)
 8048204:	04 00                	add    $0x0,%al
 8048206:	00 00                	add    %al,(%eax)
 8048208:	11 00                	adc    %eax,(%eax)
 804820a:	10 00                	adc    %al,(%eax)

Disassembly of section .dynstr:

0804820c <.dynstr>:
 804820c:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 8048210:	63 2e                	arpl   %bp,(%esi)
 8048212:	73 6f                	jae    8048283 <_init-0x9>
 8048214:	2e 36 00 5f 49       	cs add %bl,%ss:0x49(%edi)
 8048219:	4f                   	dec    %edi
 804821a:	5f                   	pop    %edi
 804821b:	73 74                	jae    8048291 <_init+0x5>
 804821d:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 8048224:	64 
 8048225:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048228:	6c                   	insb   (%dx),%es:(%edi)
 8048229:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 8048230:	72 74                	jb     80482a6 <_init+0x1a>
 8048232:	5f                   	pop    %edi
 8048233:	6d                   	insl   (%dx),%es:(%edi)
 8048234:	61                   	popa   
 8048235:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%esi),%ebp
 804823c:	6f                   	outsl  %ds:(%esi),(%dx)
 804823d:	6e                   	outsb  %ds:(%esi),(%dx)
 804823e:	5f                   	pop    %edi
 804823f:	73 74                	jae    80482b5 <_init+0x29>
 8048241:	61                   	popa   
 8048242:	72 74                	jb     80482b8 <_init+0x2c>
 8048244:	5f                   	pop    %edi
 8048245:	5f                   	pop    %edi
 8048246:	00 47 4c             	add    %al,0x4c(%edi)
 8048249:	49                   	dec    %ecx
 804824a:	42                   	inc    %edx
 804824b:	43                   	inc    %ebx
 804824c:	5f                   	pop    %edi
 804824d:	32 2e                	xor    (%esi),%ch
 804824f:	30 00                	xor    %al,(%eax)

Disassembly of section .gnu.version:

08048252 <.gnu.version>:
 8048252:	00 00                	add    %al,(%eax)
 8048254:	00 00                	add    %al,(%eax)
 8048256:	02 00                	add    (%eax),%al
 8048258:	01 00                	add    %eax,(%eax)

Disassembly of section .gnu.version_r:

0804825c <.gnu.version_r>:
 804825c:	01 00                	add    %eax,(%eax)
 804825e:	01 00                	add    %eax,(%eax)
 8048260:	01 00                	add    %eax,(%eax)
 8048262:	00 00                	add    %al,(%eax)
 8048264:	10 00                	adc    %al,(%eax)
 8048266:	00 00                	add    %al,(%eax)
 8048268:	00 00                	add    %al,(%eax)
 804826a:	00 00                	add    %al,(%eax)
 804826c:	10 69 69             	adc    %ch,0x69(%ecx)
 804826f:	0d 00 00 02 00       	or     $0x20000,%eax
 8048274:	3b 00                	cmp    (%eax),%eax
 8048276:	00 00                	add    %al,(%eax)
 8048278:	00 00                	add    %al,(%eax)
	...

Disassembly of section .rel.dyn:

0804827c <.rel.dyn>:
 804827c:	fc                   	cld    
 804827d:	9f                   	lahf   
 804827e:	04 08                	add    $0x8,%al
 8048280:	06                   	push   %es
 8048281:	01 00                	add    %eax,(%eax)
	...

Disassembly of section .rel.plt:

08048284 <.rel.plt>:
 8048284:	0c a0                	or     $0xa0,%al
 8048286:	04 08                	add    $0x8,%al
 8048288:	07                   	pop    %es
 8048289:	02 00                	add    (%eax),%al
	...

Disassembly of section .init:

0804828c <_init>:
 804828c:	53                   	push   %ebx
 804828d:	83 ec 08             	sub    $0x8,%esp
 8048290:	e8 7b 00 00 00       	call   8048310 <__x86.get_pc_thunk.bx>
 8048295:	81 c3 6b 1d 00 00    	add    $0x1d6b,%ebx
 804829b:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80482a1:	85 c0                	test   %eax,%eax
 80482a3:	74 05                	je     80482aa <_init+0x1e>
 80482a5:	e8 26 00 00 00       	call   80482d0 <__libc_start_main@plt+0x10>
 80482aa:	83 c4 08             	add    $0x8,%esp
 80482ad:	5b                   	pop    %ebx
 80482ae:	c3                   	ret    

Disassembly of section .plt:

080482b0 <__libc_start_main@plt-0x10>:
 80482b0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80482b6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80482bc:	00 00                	add    %al,(%eax)
	...

080482c0 <__libc_start_main@plt>:
 80482c0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80482c6:	68 00 00 00 00       	push   $0x0
 80482cb:	e9 e0 ff ff ff       	jmp    80482b0 <_init+0x24>

Disassembly of section .plt.got:

080482d0 <.plt.got>:
 80482d0:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 80482d6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

080482e0 <_start>:
 80482e0:	31 ed                	xor    %ebp,%ebp
 80482e2:	5e                   	pop    %esi
 80482e3:	89 e1                	mov    %esp,%ecx
 80482e5:	83 e4 f0             	and    $0xfffffff0,%esp
 80482e8:	50                   	push   %eax
 80482e9:	54                   	push   %esp
 80482ea:	52                   	push   %edx
 80482eb:	68 80 84 04 08       	push   $0x8048480
 80482f0:	68 20 84 04 08       	push   $0x8048420
 80482f5:	51                   	push   %ecx
 80482f6:	56                   	push   %esi
 80482f7:	68 db 83 04 08       	push   $0x80483db
 80482fc:	e8 bf ff ff ff       	call   80482c0 <__libc_start_main@plt>
 8048301:	f4                   	hlt    
 8048302:	66 90                	xchg   %ax,%ax
 8048304:	66 90                	xchg   %ax,%ax
 8048306:	66 90                	xchg   %ax,%ax
 8048308:	66 90                	xchg   %ax,%ax
 804830a:	66 90                	xchg   %ax,%ax
 804830c:	66 90                	xchg   %ax,%ax
 804830e:	66 90                	xchg   %ax,%ax

08048310 <__x86.get_pc_thunk.bx>:
 8048310:	8b 1c 24             	mov    (%esp),%ebx
 8048313:	c3                   	ret    
 8048314:	66 90                	xchg   %ax,%ax
 8048316:	66 90                	xchg   %ax,%ax
 8048318:	66 90                	xchg   %ax,%ax
 804831a:	66 90                	xchg   %ax,%ax
 804831c:	66 90                	xchg   %ax,%ax
 804831e:	66 90                	xchg   %ax,%ax

08048320 <deregister_tm_clones>:
 8048320:	b8 1b a0 04 08       	mov    $0x804a01b,%eax
 8048325:	2d 18 a0 04 08       	sub    $0x804a018,%eax
 804832a:	83 f8 06             	cmp    $0x6,%eax
 804832d:	76 1a                	jbe    8048349 <deregister_tm_clones+0x29>
 804832f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048334:	85 c0                	test   %eax,%eax
 8048336:	74 11                	je     8048349 <deregister_tm_clones+0x29>
 8048338:	55                   	push   %ebp
 8048339:	89 e5                	mov    %esp,%ebp
 804833b:	83 ec 14             	sub    $0x14,%esp
 804833e:	68 18 a0 04 08       	push   $0x804a018
 8048343:	ff d0                	call   *%eax
 8048345:	83 c4 10             	add    $0x10,%esp
 8048348:	c9                   	leave  
 8048349:	f3 c3                	repz ret 
 804834b:	90                   	nop
 804834c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

08048350 <register_tm_clones>:
 8048350:	b8 18 a0 04 08       	mov    $0x804a018,%eax
 8048355:	2d 18 a0 04 08       	sub    $0x804a018,%eax
 804835a:	c1 f8 02             	sar    $0x2,%eax
 804835d:	89 c2                	mov    %eax,%edx
 804835f:	c1 ea 1f             	shr    $0x1f,%edx
 8048362:	01 d0                	add    %edx,%eax
 8048364:	d1 f8                	sar    %eax
 8048366:	74 1b                	je     8048383 <register_tm_clones+0x33>
 8048368:	ba 00 00 00 00       	mov    $0x0,%edx
 804836d:	85 d2                	test   %edx,%edx
 804836f:	74 12                	je     8048383 <register_tm_clones+0x33>
 8048371:	55                   	push   %ebp
 8048372:	89 e5                	mov    %esp,%ebp
 8048374:	83 ec 10             	sub    $0x10,%esp
 8048377:	50                   	push   %eax
 8048378:	68 18 a0 04 08       	push   $0x804a018
 804837d:	ff d2                	call   *%edx
 804837f:	83 c4 10             	add    $0x10,%esp
 8048382:	c9                   	leave  
 8048383:	f3 c3                	repz ret 
 8048385:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048389:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048390 <__do_global_dtors_aux>:
 8048390:	80 3d 18 a0 04 08 00 	cmpb   $0x0,0x804a018
 8048397:	75 13                	jne    80483ac <__do_global_dtors_aux+0x1c>
 8048399:	55                   	push   %ebp
 804839a:	89 e5                	mov    %esp,%ebp
 804839c:	83 ec 08             	sub    $0x8,%esp
 804839f:	e8 7c ff ff ff       	call   8048320 <deregister_tm_clones>
 80483a4:	c6 05 18 a0 04 08 01 	movb   $0x1,0x804a018
 80483ab:	c9                   	leave  
 80483ac:	f3 c3                	repz ret 
 80483ae:	66 90                	xchg   %ax,%ax

080483b0 <frame_dummy>:
 80483b0:	b8 10 9f 04 08       	mov    $0x8049f10,%eax
 80483b5:	8b 10                	mov    (%eax),%edx
 80483b7:	85 d2                	test   %edx,%edx
 80483b9:	75 05                	jne    80483c0 <frame_dummy+0x10>
 80483bb:	eb 93                	jmp    8048350 <register_tm_clones>
 80483bd:	8d 76 00             	lea    0x0(%esi),%esi
 80483c0:	ba 00 00 00 00       	mov    $0x0,%edx
 80483c5:	85 d2                	test   %edx,%edx
 80483c7:	74 f2                	je     80483bb <frame_dummy+0xb>
 80483c9:	55                   	push   %ebp
 80483ca:	89 e5                	mov    %esp,%ebp
 80483cc:	83 ec 14             	sub    $0x14,%esp
 80483cf:	50                   	push   %eax
 80483d0:	ff d2                	call   *%edx
 80483d2:	83 c4 10             	add    $0x10,%esp
 80483d5:	c9                   	leave  
 80483d6:	e9 75 ff ff ff       	jmp    8048350 <register_tm_clones>

080483db <main>:
 80483db:	55                   	push   %ebp
 80483dc:	89 e5                	mov    %esp,%ebp
 80483de:	83 ec 10             	sub    $0x10,%esp
 80483e1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
 80483e8:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)
 80483ef:	eb 0a                	jmp    80483fb <main+0x20>
 80483f1:	8b 45 f8             	mov    -0x8(%ebp),%eax
 80483f4:	01 45 fc             	add    %eax,-0x4(%ebp)
 80483f7:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)
 80483fb:	83 7d f8 64          	cmpl   $0x64,-0x8(%ebp)
 80483ff:	7e f0                	jle    80483f1 <main+0x16>
 8048401:	81 7d fc ba 13 00 00 	cmpl   $0x13ba,-0x4(%ebp)
 8048408:	74 07                	je     8048411 <main+0x36>
 804840a:	b8 01 00 00 00       	mov    $0x1,%eax
 804840f:	eb 05                	jmp    8048416 <main+0x3b>
 8048411:	b8 00 00 00 00       	mov    $0x0,%eax
 8048416:	c9                   	leave  
 8048417:	c3                   	ret    
 8048418:	66 90                	xchg   %ax,%ax
 804841a:	66 90                	xchg   %ax,%ax
 804841c:	66 90                	xchg   %ax,%ax
 804841e:	66 90                	xchg   %ax,%ax

08048420 <__libc_csu_init>:
 8048420:	55                   	push   %ebp
 8048421:	57                   	push   %edi
 8048422:	56                   	push   %esi
 8048423:	53                   	push   %ebx
 8048424:	e8 e7 fe ff ff       	call   8048310 <__x86.get_pc_thunk.bx>
 8048429:	81 c3 d7 1b 00 00    	add    $0x1bd7,%ebx
 804842f:	83 ec 0c             	sub    $0xc,%esp
 8048432:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 8048436:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804843c:	e8 4b fe ff ff       	call   804828c <_init>
 8048441:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048447:	29 c6                	sub    %eax,%esi
 8048449:	c1 fe 02             	sar    $0x2,%esi
 804844c:	85 f6                	test   %esi,%esi
 804844e:	74 25                	je     8048475 <__libc_csu_init+0x55>
 8048450:	31 ff                	xor    %edi,%edi
 8048452:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048458:	83 ec 04             	sub    $0x4,%esp
 804845b:	ff 74 24 2c          	pushl  0x2c(%esp)
 804845f:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048463:	55                   	push   %ebp
 8048464:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 804846b:	83 c7 01             	add    $0x1,%edi
 804846e:	83 c4 10             	add    $0x10,%esp
 8048471:	39 f7                	cmp    %esi,%edi
 8048473:	75 e3                	jne    8048458 <__libc_csu_init+0x38>
 8048475:	83 c4 0c             	add    $0xc,%esp
 8048478:	5b                   	pop    %ebx
 8048479:	5e                   	pop    %esi
 804847a:	5f                   	pop    %edi
 804847b:	5d                   	pop    %ebp
 804847c:	c3                   	ret    
 804847d:	8d 76 00             	lea    0x0(%esi),%esi

08048480 <__libc_csu_fini>:
 8048480:	f3 c3                	repz ret 

Disassembly of section .fini:

08048484 <_fini>:
 8048484:	53                   	push   %ebx
 8048485:	83 ec 08             	sub    $0x8,%esp
 8048488:	e8 83 fe ff ff       	call   8048310 <__x86.get_pc_thunk.bx>
 804848d:	81 c3 73 1b 00 00    	add    $0x1b73,%ebx
 8048493:	83 c4 08             	add    $0x8,%esp
 8048496:	5b                   	pop    %ebx
 8048497:	c3                   	ret    

Disassembly of section .rodata:

08048498 <_fp_hw>:
 8048498:	03 00                	add    (%eax),%eax
	...

0804849c <_IO_stdin_used>:
 804849c:	01 00                	add    %eax,(%eax)
 804849e:	02 00                	add    (%eax),%al

Disassembly of section .eh_frame_hdr:

080484a0 <__GNU_EH_FRAME_HDR>:
 80484a0:	01 1b                	add    %ebx,(%ebx)
 80484a2:	03 3b                	add    (%ebx),%edi
 80484a4:	28 00                	sub    %al,(%eax)
 80484a6:	00 00                	add    %al,(%eax)
 80484a8:	04 00                	add    $0x0,%al
 80484aa:	00 00                	add    %al,(%eax)
 80484ac:	10 fe                	adc    %bh,%dh
 80484ae:	ff                   	(bad)  
 80484af:	ff 44 00 00          	incl   0x0(%eax,%eax,1)
 80484b3:	00 3b                	add    %bh,(%ebx)
 80484b5:	ff                   	(bad)  
 80484b6:	ff                   	(bad)  
 80484b7:	ff 68 00             	ljmp   *0x0(%eax)
 80484ba:	00 00                	add    %al,(%eax)
 80484bc:	80 ff ff             	cmp    $0xff,%bh
 80484bf:	ff 88 00 00 00 e0    	decl   -0x20000000(%eax)
 80484c5:	ff                   	(bad)  
 80484c6:	ff                   	(bad)  
 80484c7:	ff d4                	call   *%esp
 80484c9:	00 00                	add    %al,(%eax)
	...

Disassembly of section .eh_frame:

080484cc <__FRAME_END__-0xbc>:
 80484cc:	14 00                	adc    $0x0,%al
 80484ce:	00 00                	add    %al,(%eax)
 80484d0:	00 00                	add    %al,(%eax)
 80484d2:	00 00                	add    %al,(%eax)
 80484d4:	01 7a 52             	add    %edi,0x52(%edx)
 80484d7:	00 01                	add    %al,(%ecx)
 80484d9:	7c 08                	jl     80484e3 <__GNU_EH_FRAME_HDR+0x43>
 80484db:	01 1b                	add    %ebx,(%ebx)
 80484dd:	0c 04                	or     $0x4,%al
 80484df:	04 88                	add    $0x88,%al
 80484e1:	01 00                	add    %eax,(%eax)
 80484e3:	00 20                	add    %ah,(%eax)
 80484e5:	00 00                	add    %al,(%eax)
 80484e7:	00 1c 00             	add    %bl,(%eax,%eax,1)
 80484ea:	00 00                	add    %al,(%eax)
 80484ec:	c4                   	(bad)  
 80484ed:	fd                   	std    
 80484ee:	ff                   	(bad)  
 80484ef:	ff 20                	jmp    *(%eax)
 80484f1:	00 00                	add    %al,(%eax)
 80484f3:	00 00                	add    %al,(%eax)
 80484f5:	0e                   	push   %cs
 80484f6:	08 46 0e             	or     %al,0xe(%esi)
 80484f9:	0c 4a                	or     $0x4a,%al
 80484fb:	0f 0b                	ud2    
 80484fd:	74 04                	je     8048503 <__GNU_EH_FRAME_HDR+0x63>
 80484ff:	78 00                	js     8048501 <__GNU_EH_FRAME_HDR+0x61>
 8048501:	3f                   	aas    
 8048502:	1a 3b                	sbb    (%ebx),%bh
 8048504:	2a 32                	sub    (%edx),%dh
 8048506:	24 22                	and    $0x22,%al
 8048508:	1c 00                	sbb    $0x0,%al
 804850a:	00 00                	add    %al,(%eax)
 804850c:	40                   	inc    %eax
 804850d:	00 00                	add    %al,(%eax)
 804850f:	00 cb                	add    %cl,%bl
 8048511:	fe                   	(bad)  
 8048512:	ff                   	(bad)  
 8048513:	ff                   	(bad)  
 8048514:	3d 00 00 00 00       	cmp    $0x0,%eax
 8048519:	41                   	inc    %ecx
 804851a:	0e                   	push   %cs
 804851b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
 8048521:	79 c5                	jns    80484e8 <__GNU_EH_FRAME_HDR+0x48>
 8048523:	0c 04                	or     $0x4,%al
 8048525:	04 00                	add    $0x0,%al
 8048527:	00 48 00             	add    %cl,0x0(%eax)
 804852a:	00 00                	add    %al,(%eax)
 804852c:	60                   	pusha  
 804852d:	00 00                	add    %al,(%eax)
 804852f:	00 f0                	add    %dh,%al
 8048531:	fe                   	(bad)  
 8048532:	ff                   	(bad)  
 8048533:	ff 5d 00             	lcall  *0x0(%ebp)
 8048536:	00 00                	add    %al,(%eax)
 8048538:	00 41 0e             	add    %al,0xe(%ecx)
 804853b:	08 85 02 41 0e 0c    	or     %al,0xc0e4102(%ebp)
 8048541:	87 03                	xchg   %eax,(%ebx)
 8048543:	41                   	inc    %ecx
 8048544:	0e                   	push   %cs
 8048545:	10 86 04 41 0e 14    	adc    %al,0x140e4104(%esi)
 804854b:	83 05 4e 0e 20 69 0e 	addl   $0xe,0x69200e4e
 8048552:	24 44                	and    $0x44,%al
 8048554:	0e                   	push   %cs
 8048555:	28 44 0e 2c          	sub    %al,0x2c(%esi,%ecx,1)
 8048559:	41                   	inc    %ecx
 804855a:	0e                   	push   %cs
 804855b:	30 4d 0e             	xor    %cl,0xe(%ebp)
 804855e:	20 47 0e             	and    %al,0xe(%edi)
 8048561:	14 41                	adc    $0x41,%al
 8048563:	c3                   	ret    
 8048564:	0e                   	push   %cs
 8048565:	10 41 c6             	adc    %al,-0x3a(%ecx)
 8048568:	0e                   	push   %cs
 8048569:	0c 41                	or     $0x41,%al
 804856b:	c7                   	(bad)  
 804856c:	0e                   	push   %cs
 804856d:	08 41 c5             	or     %al,-0x3b(%ecx)
 8048570:	0e                   	push   %cs
 8048571:	04 00                	add    $0x0,%al
 8048573:	00 10                	add    %dl,(%eax)
 8048575:	00 00                	add    %al,(%eax)
 8048577:	00 ac 00 00 00 04 ff 	add    %ch,-0xfc0000(%eax,%eax,1)
 804857e:	ff                   	(bad)  
 804857f:	ff 02                	incl   (%edx)
 8048581:	00 00                	add    %al,(%eax)
 8048583:	00 00                	add    %al,(%eax)
 8048585:	00 00                	add    %al,(%eax)
	...

08048588 <__FRAME_END__>:
 8048588:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init_array:

08049f08 <__frame_dummy_init_array_entry>:
 8049f08:	b0 83                	mov    $0x83,%al
 8049f0a:	04 08                	add    $0x8,%al

Disassembly of section .fini_array:

08049f0c <__do_global_dtors_aux_fini_array_entry>:
 8049f0c:	90                   	nop
 8049f0d:	83                   	.byte 0x83
 8049f0e:	04 08                	add    $0x8,%al

Disassembly of section .jcr:

08049f10 <__JCR_END__>:
 8049f10:	00 00                	add    %al,(%eax)
	...

Disassembly of section .dynamic:

08049f14 <_DYNAMIC>:
 8049f14:	01 00                	add    %eax,(%eax)
 8049f16:	00 00                	add    %al,(%eax)
 8049f18:	01 00                	add    %eax,(%eax)
 8049f1a:	00 00                	add    %al,(%eax)
 8049f1c:	0c 00                	or     $0x0,%al
 8049f1e:	00 00                	add    %al,(%eax)
 8049f20:	8c 82 04 08 0d 00    	mov    %es,0xd0804(%edx)
 8049f26:	00 00                	add    %al,(%eax)
 8049f28:	84 84 04 08 19 00 00 	test   %al,0x1908(%esp,%eax,1)
 8049f2f:	00 08                	add    %cl,(%eax)
 8049f31:	9f                   	lahf   
 8049f32:	04 08                	add    $0x8,%al
 8049f34:	1b 00                	sbb    (%eax),%eax
 8049f36:	00 00                	add    %al,(%eax)
 8049f38:	04 00                	add    $0x0,%al
 8049f3a:	00 00                	add    %al,(%eax)
 8049f3c:	1a 00                	sbb    (%eax),%al
 8049f3e:	00 00                	add    %al,(%eax)
 8049f40:	0c 9f                	or     $0x9f,%al
 8049f42:	04 08                	add    $0x8,%al
 8049f44:	1c 00                	sbb    $0x0,%al
 8049f46:	00 00                	add    %al,(%eax)
 8049f48:	04 00                	add    $0x0,%al
 8049f4a:	00 00                	add    %al,(%eax)
 8049f4c:	f5                   	cmc    
 8049f4d:	fe                   	(bad)  
 8049f4e:	ff 6f ac             	ljmp   *-0x54(%edi)
 8049f51:	81 04 08 05 00 00 00 	addl   $0x5,(%eax,%ecx,1)
 8049f58:	0c 82                	or     $0x82,%al
 8049f5a:	04 08                	add    $0x8,%al
 8049f5c:	06                   	push   %es
 8049f5d:	00 00                	add    %al,(%eax)
 8049f5f:	00 cc                	add    %cl,%ah
 8049f61:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 8049f68:	45                   	inc    %ebp
 8049f69:	00 00                	add    %al,(%eax)
 8049f6b:	00 0b                	add    %cl,(%ebx)
 8049f6d:	00 00                	add    %al,(%eax)
 8049f6f:	00 10                	add    %dl,(%eax)
 8049f71:	00 00                	add    %al,(%eax)
 8049f73:	00 15 00 00 00 00    	add    %dl,0x0
 8049f79:	00 00                	add    %al,(%eax)
 8049f7b:	00 03                	add    %al,(%ebx)
 8049f7d:	00 00                	add    %al,(%eax)
 8049f7f:	00 00                	add    %al,(%eax)
 8049f81:	a0 04 08 02 00       	mov    0x20804,%al
 8049f86:	00 00                	add    %al,(%eax)
 8049f88:	08 00                	or     %al,(%eax)
 8049f8a:	00 00                	add    %al,(%eax)
 8049f8c:	14 00                	adc    $0x0,%al
 8049f8e:	00 00                	add    %al,(%eax)
 8049f90:	11 00                	adc    %eax,(%eax)
 8049f92:	00 00                	add    %al,(%eax)
 8049f94:	17                   	pop    %ss
 8049f95:	00 00                	add    %al,(%eax)
 8049f97:	00 84 82 04 08 11 00 	add    %al,0x110804(%edx,%eax,4)
 8049f9e:	00 00                	add    %al,(%eax)
 8049fa0:	7c 82                	jl     8049f24 <_DYNAMIC+0x10>
 8049fa2:	04 08                	add    $0x8,%al
 8049fa4:	12 00                	adc    (%eax),%al
 8049fa6:	00 00                	add    %al,(%eax)
 8049fa8:	08 00                	or     %al,(%eax)
 8049faa:	00 00                	add    %al,(%eax)
 8049fac:	13 00                	adc    (%eax),%eax
 8049fae:	00 00                	add    %al,(%eax)
 8049fb0:	08 00                	or     %al,(%eax)
 8049fb2:	00 00                	add    %al,(%eax)
 8049fb4:	fe                   	(bad)  
 8049fb5:	ff                   	(bad)  
 8049fb6:	ff 6f 5c             	ljmp   *0x5c(%edi)
 8049fb9:	82                   	(bad)  
 8049fba:	04 08                	add    $0x8,%al
 8049fbc:	ff                   	(bad)  
 8049fbd:	ff                   	(bad)  
 8049fbe:	ff 6f 01             	ljmp   *0x1(%edi)
 8049fc1:	00 00                	add    %al,(%eax)
 8049fc3:	00 f0                	add    %dh,%al
 8049fc5:	ff                   	(bad)  
 8049fc6:	ff 6f 52             	ljmp   *0x52(%edi)
 8049fc9:	82                   	(bad)  
 8049fca:	04 08                	add    $0x8,%al
	...

Disassembly of section .got:

08049ffc <.got>:
 8049ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	14 9f                	adc    $0x9f,%al
 804a002:	04 08                	add    $0x8,%al
	...
 804a00c:	c6                   	.byte 0xc6
 804a00d:	82                   	(bad)  
 804a00e:	04 08                	add    $0x8,%al

Disassembly of section .data:

0804a010 <__data_start>:
 804a010:	00 00                	add    %al,(%eax)
	...

0804a014 <__dso_handle>:
 804a014:	00 00                	add    %al,(%eax)
	...

Disassembly of section .bss:

0804a018 <__bss_start>:
 804a018:	00 00                	add    %al,(%eax)
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <_init-0x8048214>
   a:	74 75                	je     81 <_init-0x804820b>
   c:	20 35 2e 33 2e 31    	and    %dh,0x312e332e
  12:	2d 31 34 75 62       	sub    $0x62753431,%eax
  17:	75 6e                	jne    87 <_init-0x8048205>
  19:	74 75                	je     90 <_init-0x80481fc>
  1b:	32 29                	xor    (%ecx),%ch
  1d:	20 35 2e 33 2e 31    	and    %dh,0x312e332e
  23:	20 32                	and    %dh,(%edx)
  25:	30 31                	xor    %dh,(%ecx)
  27:	36 30 34 31          	xor    %dh,%ss:(%ecx,%esi,1)
  2b:	33 00                	xor    (%eax),%eax
